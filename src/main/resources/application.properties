# spring boot配置文件:部分配置属性与说明

# server config
# 是否开启压缩,默认为false
server.compression.enabled=true
# server.compression.excluded-user-agents:指定不压缩的user-agent,多个以逗号分隔,默认值为:text/html,text/xml,text/plain,text/css
# server.compression.mime-types:指定要压缩的MIME type,多个以逗号分隔
# server.address:指定server绑定的地址
# server.compression.min-response-size:执行压缩的阈值,默认为2048
# server.context-parameters.[param name]:设置servlet context参数
# server.context-path:设定应用的context-path(如server.context-path=/syncWeb,访问界面时要加上这个contxtpath,默认ROOT)
# server.display-name:设定应用的展示名称,默认:application
# server.jsp-servlet.class-name:设定编译JSP用的servlet,默认:org.apache.jasper.servlet.JspServlet
# server.jsp-servlet.init-parameters.[param name]:设置JSP servlet初始化参数
# server.jsp-servlet.registered:设定JSP servlet是否注册到内嵌的servlet容器,默认true
# server.servlet-path:设定dispatcher servlet的监听路径，默认为:/
server.connection-timeout=120000
# server.context-path=/demo
# 设定http监听端口
server.port=8080

# cookie,session配置
# server.session.cookie.comment:指定session cookie的comment
# server.session.cookie.domain:指定session cookie的domain
# server.session.cookie.http-only:是否开启HttpOnly
# server.session.cookie.max-age:设定session cookie的最大age
# server.session.cookie.name:设定Session cookie 的名称
# server.session.cookie.path:设定session cookie的路径
# server.session.cookie.secure:设定session cookie的Secure flag
# server.session.persistent:重启时是否持久化session,默认false
# server.session.timeout:session的超时时间
# server.session.tracking-modes:设定Session的追踪模式(cookie,url,ssl)

# activemq config
# spring.activemq.broker-url:指定ActiveMQ broker的URL,默认自动生成
# spring.activemq.in-memory:是否是内存模式,默认为true
# spring.activemq.password:指定broker的密码
# spring.activemq.pooled:是否创建PooledConnectionFactory,而非ConnectionFactory,默认false
# spring.activemq.user:指定broker的用户

# multipart and http config
# spring.http.multipart.enabled：是否开启文件上传支持,默认为true
# spring.http.multipart.file-size-threshold:设定文件写入磁盘的阈值,单位为MB或KB,默认为0
# spring.http.multipart.location:指定文件上传路径
# spring.http.multipart.max-file-size:指定文件大小最大值,默认1MB
# spring.http.multipart.max-request-size:指定每次请求的最大值,默认为10MB
# spring.http.encoding.charset:指定http请求和相应的Charset,默认:UTF-8
# spring.http.encoding.enabled:是否开启http的编码支持,默认为true
# spring.http.encoding.force:是否强制对http请求和响应进行编码,默认为true
# spring.http.converters.preferred-json-mapper:是否优先使用JSON mapper来转换

# view config 
# spring.mvc.view.prefix:设定mvc视图的前缀
# spring.mvc.view.suffix:设定mvc视图的后缀

# resource config
# spring.resources.add-mappings:是否开启默认的资源处理,默认为true
# spring.resources.cache-period:设定资源的缓存时效,以秒为单位
# spring.resources.chain.cache:是否开启缓存,默认为:true
# spring.resources.chain.enabled:是否开启资源 handling chain,默认为false
# spring.resources.chain.html-application-cache:是否开启h5应用的cache manifest重写,默认为:false
# spring.resources.chain.strategy.content.enabled:是否开启内容版本策略,默认为false
# spring.resources.chain.strategy.content.paths:指定要应用的版本的路径,多个以逗号分隔,默认为:[/**]
# spring.resources.chain.strategy.fixed.enabled:是否开启固定的版本策略,默认为false
# spring.resources.chain.strategy.fixed.paths:指定要应用版本策略的路径,多个以逗号分隔
# spring.resources.chain.strategy.fixed.version:指定版本策略使用的版本号
# spring.resources.static-locations:指定静态资源路径,默认为classpath:"classpath:/META-INF/resources/", "classpath:/resources/","classpath:/static/", "classpath:/public/"

# 对内置的tomcat或jetty config
# server.tomcat.xxx 
# server.jetty.xxx

# datasource config (use druid)
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 数据库url,用户名与密码(界面有表格故使用前需要导入ci_host_compare表结构与数据)
spring.datasource.url=jdbc:oracle:thin:@192.168.80.100:1521:orcl
spring.datasource.username=admin
spring.datasource.password=password
spring.datasource.driverClassName=oracle.jdbc.OracleDriver
spring.datasource.initialSize=2
spring.datasource.minIdle=2
spring.datasource.maxActive=50
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall,log4j
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# datasource config (use dbcp)
# please use 'spring.datasource.dbcp' prefix

# mybatis and page config
mybatis.type-aliases-package=com.ustcinfo.springboot.demo.model
mybatis.mapper-locations=classpath:mapper/*.xml
pagehelper.helper-dialect=oracle
# 启用合理化时如果pageNum<1会查询第一页,如果pageNum>pages会查询最后一页;禁用合理化时,如果pageNum<1或pageNum>pages会返回空数据,默认为false
pagehelper.reasonable=true
# 支持通过Mapper接口参数来传递分页参数
pagehelper.support-methods-arguments=true
# 增加了一个`params`参数来配置参数映射,用于从Map或ServletRequest中取值
# 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,orderBy,不配置映射的用默认值.不理解该含义的前提下,不要随便复制该配置
# pagehelper.params=count=countSql
# 设置为true时,会将RowBounds第一个参数offset当成pageNum页码使用,默认false
pagehelper.offset-as-page-num=true
# 设置为true时使用RowBounds分页会进行count查询,默认为false
pagehelper.row-bounds-with-count=true
# 设置为true时,如果pageSize=0或者RowBounds.limit=0就会查询出全部的结果(相当于没有执行分页查询,但是返回结果仍然是Page类型)
pagehelper.page-size-zero=true

# cas config,单点登录配置,若不使用请注释掉com.songlea.springboot.demo.configure.cas包下的两个类的@Configuration
cas.param.serverName=http://127.0.0.1:8080
cas.param.casServerLoginUrl=http://192.168.80.149:8083/cas/login
cas.param.authFilterName=CAS Authentication Filter
cas.param.casServerUrlPrefix=http://192.168.80.149:8083/cas/
cas.param.casFilterName=CAS Single Sign Out Filter
cas.param.casServerLogoutUrl=http://192.168.80.149:8083/cas/logout
cas.param.logoutListenerName=CAS Assertion Thread Local Filter

# template config - freemarker
## 指定HttpServletRequest的属性是否可以覆盖controller的model的同名项
#spring.freemarker.allow-request-override=false
## 指定HttpSession的属性是否可以覆盖controller的model的同名项
#spring.freemarker.allow-session-override=false
## 是否开启template caching
#spring.freemarker.cache=false
## 设定Template的编码
#spring.freemarker.charset=UTF-8
## 是否检查templates路径是否存在
#spring.freemarker.check-template-location=true
## 设定Content-Type
#spring.freemarker.content-type=text/html
## 是否允许mvc使用freemarker
#spring.freemarker.enabled=true
## 设定所有request的属性在merge到模板的时候,是否要都添加到model中
#spring.freemarker.expose-request-attributes=false
## 设定所有HttpSession的属性在merge到模板的时候,是否要都添加到model中
#spring.freemarker.expose-session-attributes=false
## 设定是否以springMacroRequestContext的形式暴露RequestContext给Spring’s macro library使用
#spring.freemarker.expose-spring-macro-helpers=true
## 是否优先从文件系统加载template,以支持热加载,默认为true
#spring.freemarker.prefer-file-system-access=true
## 设定模板的后缀
#spring.freemarker.suffix=.ftl
## 指定RequestContext属性的名
#spring.freemarker.request-context-attribute=request
## 设定模板的加载路径,多个以逗号分隔,默认:["classpath:/templates/"]
#spring.freemarker.template-loader-path=classpath:/templates/
## 避免每次请求都重新载入模版,即充分利用cached的模版,0不使用cached模版
#spring.freemarker.settings.template_update_delay=0
#spring.freemarker.settings.default_encoding=UTF-8
## 是否兼容传统模式(避免报空错误),此处为全局设置,若界面不需要则使用<#setting classic_compatible=false>
#spring.freemarker.settings.classic_compatible=true
## spring.freemarker.prefix:设定freemarker模板的前缀

# template config - thymeleaf
# org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties配置类
# 是否开启模板缓存,默认true
spring.thymeleaf.cache=true
# 是否检查模板路径是否存在,默认true
spring.thymeleaf.check-template-location=true
# 指定Content-Type,默认为:text/html
spring.thymeleaf.content-type=text/html
# 是否允许MVC使用Thymeleaf,默认为: true
spring.thymeleaf.enabled=true
# 指定模板的编码,默认为: UTF-8
spring.thymeleaf.encoding=UTF-8
# spring.thymeleaf.excluded-view-names: 指定不使用模板的视图名称,多个以逗号分隔.
# 指定模板的模式,具体查看StandardTemplateModeHandlers,默认为:HTML5
spring.thymeleaf.mode=HTML5
# 指定模板的前缀,默认为:classpath:/templates/
spring.thymeleaf.prefix=classpath:/templates/
# 指定模板的后缀,默认为:.html
spring.thymeleaf.suffix=.html
# 指定模板的解析顺序,默认为第一个
spring.thymeleaf.template-resolver-order=1
# spring.thymeleaf.view-names:指定使用模板的视图名,多个以逗号分隔.

# template config - jsp
#spring.mvc.view.prefix=/WEB-INF/views/
#spring.mvc.view.suffix=.jsp

# template config - groovy
## spring.groovy.template.allow-request-override:指定HttpServletRequest的属性是否可以覆盖controller的model的同名项
## spring.groovy.template.allow-session-override:指定HttpSession的属性是否可以覆盖controller的model的同名项
## 是否开启模板缓存
#spring.groovy.template.cache=false
## 指定Template编码
#spring.groovy.template.charset=UTF-8
## 是否检查模板的路径是否存在.
#spring.groovy.template.check-template-location=true
## 是否在渲染模板时自动排查model的变量,默认为: false
#spring.groovy.template.configuration.auto-escape=false
## 是否在渲染模板时自动缩进,默认为false
#spring.groovy.template.configuration.auto-indent=false
## 如果自动缩进启用的话,是使用SPACES还是TAB,默认为:SPACES
#spring.groovy.template.configuration.auto-indent-string=SPACES
## 渲染模板时是否要输出换行,默认为false
#spring.groovy.template.configuration.auto-new-line=false
## spring.groovy.template.configuration.base-template-class:指定template base class
## 是否要缓存模板,默认为true
#spring.groovy.template.configuration.cache-templates=false
## spring.groovy.template.configuration.declaration-encoding:在写入declaration header时使用的编码
## 是使用<br/>这种形式,还是<br></br>这种展开模式,默认为:false(不设置为true时界面的script标签会变成<script /> 界面无法正确展示)
#spring.groovy.template.configuration.expand-empty-elements=true
## spring.groovy.template.configuration.locale:指定template locale
## spring.groovy.template.configuration.new-line-string:当启用自动换行时,换行的输出,默认为系统的line.separator属性的值
## 指定groovy的模板路径,默认为classpath:/templates/
#spring.groovy.template.configuration.resource-loader-path=classpath:/templates/
## 指定属性要使用双引号还是单引号,默认为false
#spring.groovy.template.configuration.use-double-quotes=true
## spring.groovy.template.content-type:指定Content-Type
#spring.groovy.template.content-type=text/html
## 是否开启groovy模板的支持
#spring.groovy.template.enabled=true
## 设定所有request的属性在merge到模板的时候,是否要都添加到model中
#spring.groovy.template.expose-request-attributes=true
## spring.groovy.template.expose-session-attributes:设定所有session的属性在merge到模板的时候,是否要都添加到model中.
## spring.groovy.template.expose-spring-macro-helpers:设定是否以springMacroRequestContext的形式暴露RequestContext给Spring’s macro library使用
## spring.groovy.template.prefix:指定模板的前缀,默认为""
## spring.groovy.template.request-context-attribute指定RequestContext属性的名.
## 指定模板的路径,默认为:classpath:/templates/
#spring.groovy.template.resource-loader-path=classpath:/templates/
## 指定模板的后缀
#spring.groovy.template.suffix=.tpl
## spring.groovy.template.view-names:指定要使用模板的视图名称
